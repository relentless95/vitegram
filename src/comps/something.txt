// Import the functions you need from the SDKs you need
import { initializeApp } from "firebase/app";
// TODO: Add SDKs for Firebase products that you want to use
// https://firebase.google.com/docs/web/setup#available-libraries

// Your web app's Firebase configuration
const firebaseConfig = {
  apiKey: "AIzaSyD-EARfHzY5RNJJ-o2g8o2tingDlbjSNHM",
  authDomain: "vite-firegram.firebaseapp.com",
  projectId: "vite-firegram",
  storageBucket: "vite-firegram.appspot.com",
  messagingSenderId: "894947932699",
  appId: "1:894947932699:web:193d2f8d612a4b563196be"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);

//script
<script type="module">
  // Import the functions you need from the SDKs you need
  import { initializeApp } from "https://www.gstatic.com/firebasejs/9.22.2/firebase-app.js";
  // TODO: Add SDKs for Firebase products that you want to use
  // https://firebase.google.com/docs/web/setup#available-libraries

  // Your web app's Firebase configuration
  const firebaseConfig = {
    apiKey: "AIzaSyD-EARfHzY5RNJJ-o2g8o2tingDlbjSNHM",
    authDomain: "vite-firegram.firebaseapp.com",
    projectId: "vite-firegram",
    storageBucket: "vite-firegram.appspot.com",
    messagingSenderId: "894947932699",
    appId: "1:894947932699:web:193d2f8d612a4b563196be"
  };

  // Initialize Firebase
  const app = initializeApp(firebaseConfig);
</script>


import { useState, useEffect } from 'react';
import { ref, uploadBytes, getDownloadURL, collection, addDoc, serverTimestamp } from 'firebase/storage';
import { db, storage } from '../firebase/config';

const useStorage = (file) => {
  const [progress, setProgress] = useState(0);
  const [error, setError] = useState(null);
  const [url, setUrl] = useState(null);

  useEffect(() => {
    // references
    const storageRef = ref(storage, file.name);
    const collectionRef = collection(db, 'images');

    uploadBytes(storageRef, file).on('state_changed', (snap) => {
      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;
      setProgress(percentage);
    }, (err) => {
      setError(err);
    }, async () => {
      const downloadURL = await getDownloadURL(storageRef);
      const createdAt = serverTimestamp();
      await addDoc(collectionRef, { url: downloadURL, createdAt });
      setUrl(downloadURL);
    });
  }, [file]);

  return { progress, url, error };
}

export default useStorage;